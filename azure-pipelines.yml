trigger:
- dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
 
stages:
- stage: First
  displayName: First Stage
  jobs:
  - job: Firstjob
    displayName: BuildFirst
    timeoutInMinutes: 10
    steps:
    - task: Bash@3
      displayName: First echo-Dev branch
      inputs:
        targetType: 'inline'
        script: |
          echo "The First job in dev branch";
          echo $(Build.Reason)
- stage: Second
  displayName: Second Stage
  dependsOn: 'First'
  jobs:  
  - job: Secondjob
    displayName: DeployAfterBuild
    steps:
    - bash: echo "Our Second Pipeline";exit 1
- stage: Third
  displayName: Third Stage
  dependsOn: Second
  jobs:  
  - job: Thirdjob
    displayName: FuncSanityAfterDeploy
    steps:
    - bash: echo "Our Third Pipeline"
- stage: Fourth
  displayName: Fourth Stage Always
  dependsOn: Second
  condition: succeeded('Second')
  jobs:  
  - job: FourthJobDependingJob
    dependsOn: Secondjob
    condition: succeeded()
    displayName: StabilitySanityAfterDeployIf2nd
    steps:
    - bash: echo "Our Fourth Pipeline-StabilitySanityAfterDeployIf2nd"
  - job: FourthJobAlwaysJob
    displayName: StabilitySanityAfterDeployAlways
    steps:
    - bash: echo "Our Fourth Pipeline-StabilitySanityAfterDeployAlways"

- stage: OnlyMaster
  displayName: OnlyMaster Stage
  dependsOn: Second
  condition: and(succeeded(), eq(variables.isMain, true))
  jobs:  
  - job: OnlyMaster
    displayName: Sanity4Master
    steps:
    - bash: echo "Our OnlyMaster Pipeline"
    - bash: echo "isMain-"$(isMain)

- stage: Fifth
  displayName: Fifth Stage Always
  dependsOn: 
  - Third
  - Fourth
  - OnlyMaster
  #condition: always()
  jobs:  
  - job: FifthJobAlways
    displayName: FuncRegressionAfterSanity
    steps:
    - bash: echo "Our Fifth Pipeline"
